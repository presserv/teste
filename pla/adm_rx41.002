/*
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
 \ Empresa.: PresServ Inform tica - Limeira (019)452.6623
 \ Programa: AMEXRX41.PRG
 \ Data....: 27-05-98
 \ Sistema.: Administradora - PLANO
 \ Funcao..: Impress„o Contrato SEFEX
 \ Analista: Ademilson Pedro Bom
 \ Criacao.: GAS-Pro v3.0 
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
*/

#include "adpbig.ch"    // inicializa constantes manifestas

LOCAL dele_atu, getlist:={}
PARA  lin_menu, col_menu
PRIV  tem_borda:=.t., op_menu:=VAR_COMPL, l_s:=11, c_s:=19, l_i:=16, c_i:=58, tela_fundo:=SAVESCREEN(0,0,MAXROW(),79)
nucop=1
SETCOLOR(drvtittel)
vr_memo=NOVAPOSI(@l_s,@c_s,@l_i,@c_i)     // pega posicao atual da tela
CAIXA(mold,l_s,c_s,l_i,c_i)               // monta caixa da tela
@ l_s,c_s+10 SAY " IMPRESSŽO CONTRATO "
SETCOLOR(drvcortel)
@ l_s+01,c_s+1 SAY " Codigo:"
@ l_s+04,c_s+1 SAY "                      Confirma ?"
rcodigo=SPAC(6)                                    // Codigo
confirme=SPAC(1)                                   // Confirme
DO WHILE .t.
 rola_t=.f.
 cod_sos=56
 SET KEY K_ALT_F8 TO ROLATELA
 SETCOLOR(drvcortel+","+drvcorget+",,,"+corcampo)
 @ l_s+01 ,c_s+10 GET  rcodigo;
                  PICT "999999";
                  VALI CRIT("PTAB(rcodigo,'GRUPOS',1)~CODIGO n„o aceit vel")
                  AJUDA "Entre com o n£mero do contrato a imprimir"
                  CMDF8 "VDBF(6,20,20,77,'GRUPOS',{'codigo','nome','admissao'},3,'codigo',[])"
                  MOSTRA {"LEFT(TRAN(GRUPOS->nome,[@!]),35)", 2 , 3 }
                  MOSTRA {"LEFT(TRAN(GRUPOS->endereco,[]),35)", 3 , 3 }

 @ l_s+04 ,c_s+34 GET  confirme;
                  PICT "!";
                  VALI CRIT("confirme='S'~CONFIRME n„o aceit vel|Digite S ou tecle ESC para cancelar")
                  AJUDA "Digite S para imprimir o contrato|ou |Tecle ESC para cancelar"

 READ
 SET KEY K_ALT_F8 TO
 IF rola_t
  ROLATELA(.f.)
  LOOP
 ENDI
 IF LASTKEY()=K_ESC                                // se quer cancelar
  RETU                                             // retorna
 ENDI

 #ifdef COM_REDE
  CLOSE GRUPOS
	IF !USEARQ("GRUPOS",.F.,10,1)                    // se falhou a abertura do arq
   RETU                                            // volta ao menu anterior
  ENDI
 #else
  USEARQ("GRUPOS")                                 // abre o dbf e seus indices
 #endi

 PTAB(codigo,"EMCARNE",1,.t.)                      // abre arquivo p/ o relacionamento
 PTAB(codigo,"ECOB",1,.t.)
 SET RELA TO codigo INTO EMCARNE,;                 // relacionamento dos arquivos
          TO codigo INTO ECOB
 titrel:=criterio:=cpord := ""                     // inicializa variaveis
 titrel:=chv_rela:=chv_1:=chv_2 := ""
 tps:=op_x:=ccop := 1
 IF !opcoes_rel(lin_menu,col_menu,7,11)            // nao quis configurar...
  CLOS ALL                                         // fecha arquivos e
  LOOP                                             // volta ao menu
 ENDI
 IF tps=2                                          // se vai para arquivo/video
  arq_=ARQGER()                                    // entao pega nome do arquivo
  IF EMPTY(arq_)                                   // se cancelou ou nao informou
   LOOP                                            // retorna
  ENDI
 ELSE
  arq_=drvporta                                    // porta de saida configurada
 ENDI
 SET PRINTER TO (arq_)                             // redireciona saida
 EXIT
ENDD
criterio_=criterio                                 // salva criterio e ordenacao
cpord_=cpord                                       // definidos se huver
criterio=""

#ifdef COM_REDE
 IF !USEARQ("INSCRITS",.F.,10,1)                   // se falhou a abertura do arq
	RETU                                             // volta ao menu anterior
 ENDI
#else
 USEARQ("INSCRITS")                                // abre o dbf e seus indices
#endi

cpord="codigo"
INDTMP()
criterio=criterio_                                 // restabelece criterio e
cpord=cpord_                                       // ordenacao definidos
SELE GRUPOS
DBOX("[ESC] Interrompe",15,,,NAO_APAGA)
dele_atu:=SET(_SET_DELETED,.t.)                    // os excluidos nao servem...
SET DEVI TO PRIN                                   // inicia a impressao
SET CENT OFF
maxli=120                                           // maximo de linhas no relatorio
IMPCTL(drvpde8)                                    // ativa 8 lpp
IF tps=2
 IMPCTL("' '+CHR(8)")
ENDI
BEGIN SEQUENCE
 DO WHIL ccop<=nucop                               // imprime qde copias pedida
  pg_=1; cl=999
  INI_ARQ()                                        // acha 1o. reg valido do arquivo
  ccop++                                           // incrementa contador de copias
  DO WHIL !EOF()
   #ifdef COM_TUTOR
    IF IN_KEY()=K_ESC                              // se quer cancelar
   #else
    IF INKEY()=K_ESC                               // se quer cancelar
   #endi
    IF canc()                                      // pede confirmacao
     BREAK                                         // confirmou...
    ENDI
   ENDI
   IF codigo==M->rcodigo                           // se atender a condicao...
    REL_CAB(8)                                     // soma cl/imprime cabecalho
    IMPCTL(drvpenf)
		@ cl,065 SAY codigo                            // Codigo
		IMPCTL(drvtenf)
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,064 SAY TRAN(vendedor,"!!!")              // Vendedor
		@ cl,072 SAY TRAN(grupo,"!!")                  // Grupo
		REL_CAB(8)                                     // soma cl/imprime cabecalho
		IMPCTL(drvpenf)
		@ cl,007 SAY nome                              // Nome
		IMPCTL(drvtenf)
		@ cl,047 SAY TRAN(cpf,"@R 999.999.999-99")     // CPF
		@ cl,064 SAY TRAN(&drvpcom+rg+&drvtcom,"@!")   // R.G.
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,007 SAY endereco                          // Endere‡o
		@ cl,059 SAY bairro                            // Bairro
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,004 SAY TRAN(cep,"@R 99999-999")          // CEP
		@ cl,020 SAY cidade                            // Cidade
		@ cl,046 SAY TRAN(uf,"!!")                     // UF
		@ cl,059 SAY TRAN(telefone,"@!")               // Telefone
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,007 SAY IIF(PTAB(codigo+[R],'ECOB',1),ECOB->endereco,[ ])// outro endereco
		@ cl,043 SAY IIF(PTAB(codigo+[R],'ECOB',1),ECOB->bairro,[ ])// outro bairro
		REL_CAB(3)                                     // soma cl/imprime cabecalho
		@ cl,004 SAY TRAN(IIF(PTAB(codigo+[R],'ECOB',1),ECOB->cep,[ ]),"@R 99999-999")// Outro CEP
		@ cl,020 SAY IIF(PTAB(codigo+[R],'ECOB',1),ECOB->cidade,[ ])// outra cidade
		@ cl,048 SAY TRAN(IIF(PTAB(codigo+[R],'ECOB',1),ECOB->uf,[ ]),"!!")// Outro UF
		@ cl,059 SAY IIF(PTAB(codigo+[R],'ECOB',1),ECOB->telefone,[ ])// Outro Telefone
		REL_CAB(06)                                    // soma cl/imprime cabecalho
		@ cl,000 SAY "."
		@ cl,013 SAY CHR(27)+'3'+chr(15)              // Habilita 216/20
		REL_CAB(1)
		chv020=codigo
		SELE INSCRITS
		SEEK chv020
		IF FOUND()
		 IF cl+2>maxli                                 // se cabecalho do arq filho
			REL_CAB(0)                                   // nao cabe nesta pagina
		 ENDI                                          // salta para a proxima pagina
		 cl+=1                                         // soma contador de linha
		 CT_IN:=0
		 DO WHIL ! EOF() .AND. chv020=codigo //LEFT(&(INDEXKEY(0)),LEN(chv020))
			#ifdef COM_TUTOR
			 IF IN_KEY()=K_ESC                           // se quer cancelar
			#else
			 IF INKEY()=K_ESC                            // se quer cancelar
			#endi
			 IF canc()                                   // pede confirmacao
				BREAK                                      // confirmou...
			 ENDI
			ENDI
			IF grau>'0'                                  // se atender a condicao...
			 CT_IN++
			 IF CT_IN>5
				CT_IN=0
				CL--
			 ENDI

			 REL_CAB(3)                                  // soma cl/imprime cabecalho
			 @ cl,004 SAY nome                           // Nome
			 @ cl,059 SAY R04201F9()                     // qualif
			 @ cl,069 SAY TRAN(nascto_,"@D")             // tab2
			 SKIP                                        // pega proximo registro
			ELSE                                         // se nao atende condicao
			 SKIP                                        // pega proximo registro
			ENDI
		 ENDD
		 cl+=1                                         // soma contador de linha
		ENDI
		@ CL,000 SAY CHR(27)+[6]
		SELE GRUPOS                                    // volta ao arquivo pai
		SKIP                                           // pega proximo registro
		cl=999                                         // forca salto de pagina
	 ELSE                                            // se nao atende condicao
		SKIP                                           // pega proximo registro
	 ENDI
	ENDD
 ENDD ccop
 EJEC                                              // salta pagina
END SEQUENCE
IMPCTL(drvtde8)                                    // ativa 6 lpp
SET PRINTER TO (drvporta)                          // fecha arquivo gerado (se houver)
SET DEVI TO SCRE                                   // direciona saida p/ video
IF tps=2                                           // se vai para arquivo/video
 BROWSE_REL(arq_,2,3,MAXROW()-2,78)
ENDI                                               // mostra o arquivo gravado
GRELA(7)                                           // grava variacao do relatorio
SET CENT OFF
msgt="PROCESSAMENTOS DO RELAT¢RIO|IMPRESSŽO CONTRATO SEFEX"
ALERTA()
op_=2 //DBOX("Prosseguir|Cancelar opera‡„o",,,E_MENU,,msgt)
IF op_=1
 DBOX("Processando registros",,,,NAO_APAGA,"AGUARDE!")
 dele_atu:=SET(_SET_DELETED,.t.)                   // os excluidos nao servem...
 SELE GRUPOS                                       // processamentos apos emissao
 INI_ARQ()                                         // acha 1o. reg valido do arquivo
 DO WHIL !EOF()
	IF codigo==M->rcodigo                            // se atender a condicao...

	 #ifdef COM_REDE
		IF DATE()>ultimp_
		 REPBLO('GRUPOS->ultimp_',{||DATE()})
		ENDI
	 #else
		IF DATE()>ultimp_
		 REPL GRUPOS->ultimp_ WITH DATE()
		ENDI
	 #endi

	 SKIP                                            // pega proximo registro
	ELSE                                             // se nao atende condicao
	 SKIP                                            // pega proximo registro
	ENDI
 ENDD
 ALERTA(2)
// DBOX("Processo terminado com sucesso!",,,,,msgt)
ENDI
SELE GRUPOS                                        // salta pagina
SET RELA TO                                        // retira os relacionamentos
SET(_SET_DELETED,dele_atu)                         // os excluidos serao vistos
RETU

STATIC PROC REL_CAB(qt)                            // cabecalho do relatorio
IF qt>0                                            // se parametro maior que 0
 cl=cl+qt                                          // soma no contador de linhas
ENDI
IF cl>maxli .OR. qt=0                              // quebra de pagina
 cl=qt+2 ; pg_++
ENDI
RETU

* \\ Final de AMEXRX41.PRG
