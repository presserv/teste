/*
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
 \ Empresa.: PresServ Inform tica - Limeira (019)452.6623
 \ Programa: ADP_RV68.PRG
 \ Data....: 19-09-00
 \ Sistema.: Administradora - PLANO
 \ Funcao..: Protocolo de Entrega
 \ Analista: Ademilson Pedro Bom
 \ Criacao.: GAS-Pro v3.0
 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
*/

#include "adpbig.ch"    // inicializa constantes manifestas

LOCAL dele_atu
PARA  lin_menu, col_menu
nucop=1
declare linha[6]
afill(linha,[])
oppro:=oprel:=1
oprel=DBOX([Sim|Nao],,,E_MENU,,[Imprimir relat¢rio?],,,1)
oppro=DBOX([Sim|Nao],,,E_MENU,,[Imprimir protocolo?],,,1)

#ifdef COM_REDE
 IF !USEARQ("TXPROC",.f.,10,1)                     // se falhou a abertura do arq
  RETU                                             // volta ao menu anterior
 ENDI
#else
 USEARQ("TXPROC")                                  // abre o dbf e seus indices
#endi

PTAB(codigo,"GRUPOS",1,.t.)                        // abre arquivo p/ o relacionamento
SET RELA TO codigo INTO GRUPOS                     // relacionamento dos arquivos
titrel:=criterio:=cpord := ""                      // inicializa variaveis
titrel:=chv_rela:=chv_1:=chv_2 := ""
tps:=op_x:=ccop := 1
IF !opcoes_rel(lin_menu,col_menu,39,11)            // nao quis configurar...
 CLOS ALL                                          // fecha arquivos e
 RETU                                              // volta ao menu
ENDI
IF tps=2                                           // se vai para arquivo/video
 arq_=ARQGER()                                     // entao pega nome do arquivo
 IF EMPTY(arq_)                                    // se cancelou ou nao informou
  RETU                                             // retorna
 ENDI
ELSE
 arq_=drvporta                                     // porta de saida configurada
ENDI
SET PRINTER TO (arq_)                              // redireciona saida
IF !EMPTY(drvtapg)                                 // existe configuracao de tam pag?
 op_=AT("NNN",drvtapg)                             // se o codigo que altera
 IF op_=0                                          // o tamanho da pagina
  msg="Configura‡„o do tamanho da p gina!"         // foi informado errado
  DBOX(msg,,,,,"ERRO!")                            // avisa
  CLOSE ALL                                        // fecha todos arquivos abertos
  RETU                                             // e cai fora...
 ENDI                                              // codigo para setar/resetar tam pag
 lpp_016=LEFT(drvtapg,op_-1)+"016"+SUBS(drvtapg,op_+3)
 lpp_066=LEFT(drvtapg,op_-1)+"066"+SUBS(drvtapg,op_+3)
ELSE
 lpp_016:=lpp_066 :=""                             // nao ira mudara o tamanho da pag
ENDI
DBOX("[ESC] Interrompe",15,,,NAO_APAGA)
dele_atu:=SET(_SET_DELETED,.t.)                    // os excluidos nao servem...
SET DEVI TO PRIN                                   // inicia a impressao
maxli=59                                           // maximo de linhas no relatorio
IMPCTL(lpp_016)                                    // seta pagina com 16 linhas
SET MARG TO 1                                      // ajusta a margem esquerda
IMPCTL(drvpcom)                                    // comprime os dados
IF tps=2
 IMPCTL("' '+CHR(8)")
ENDI
BEGIN SEQUENCE
 DO WHIL ccop<=nucop                               // imprime qde copias pedida
  IF oprel=1
   LSTPTENTR() // Lista os protocolos
  ENDI
  pg_=1; cl=999
  INI_ARQ()                                        // acha 1o. reg valido do arquivo
  ccop++                                           // incrementa contador de copias
  DO WHIL !EOF().and.oppro=1
   #ifdef COM_TUTOR
    IF IN_KEY()=K_ESC                              // se quer cancelar
   #else
    IF INKEY()=K_ESC                               // se quer cancelar
   #endi
    IF canc()                                      // pede confirmacao
     BREAK                                         // confirmou...
    ENDI
   ENDI
   IF LEN(linha[1])<80
    linha[1]+= "³"+space(39)
    IF !EMPT(GRUPOS->telefone)                      // pode imprimir?
     linha[1]+=TRAN([Tel ]+GRUPOS->telefone,"@!")+[    ]// Telefone
    ELSE
     linha[1]+=SPACE(22)
    ENDI
    linha[1]+="³"
    linha[2]+="³Grup/Num: "+GRUPOS->grupo+[ ]+codigo+; // Codigo
              "   Tit:"+TRAN(GRUPOS->nome,"@!")+"³"
    linha[3]+="³Endere‡o: "+TRAN(GRUPOS->endereco,"@!")+[     ]+;// Endere‡o
              "Cobrad: "+TRAN(cobrador,"!!!")+"³"                // Cobrador
    linha[4]+="³Bairro..: "+TRAN(GRUPOS->bairro,"@!")+[ ]+;      // Bairro
              "Cid.:"+TRAN(GRUPOS->cidade,"@!")+"³"          // Cidade

    linha[5]+="³Carne "+TRAN(INT(valorpg),"@E 999")+[ ]+;          // Qt.Circ
              "parcelas "+TRAN(valor,"@E 999.99")+[ ]+;        // Valor
              "       Vc.inic "+TRAN(emissao_,"@D")+"          ³"       // Emissao
    SKIP
    LOOP
   ENDI
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³"
   IMPAC(nemp,cl,006)                              // nome da empresa
   @ cl,062 SAY "³³"
   @ cl,069 SAY nemp                               // nemp
   @ cl,125 SAY "³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   IMPAC("³       PROTOCOLO DE ENTREGA - Carnˆ de Anuidade              ³³       PROTOCOLO DE ENTREGA - Carnˆ de Anuidade              ³",cl,000)
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[1]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[2]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[3]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[4]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[5]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Ocorrencia de Entrega                                        ³³Ocorrencia de Entrega                                        ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Entregador                                                   ³³Entregador                                                   ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   IMPAC("³Entregue …                         Parentesco:               ³³Entregue …                         Parentesco:               ³",cl,000)
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³                                                             ³³                                                             ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Ass.:                              Data.:     /     /        ³³Ass.:                              Data.:     /     /        ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ"
   AFILL(linha,[])
  ENDD
  IF LEN(linha[1]) > 0
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³"
   IMPAC(nemp,cl,006)                              // nome da empresa
   @ cl,062 SAY "³³"
   @ cl,069 SAY nemp                               // nemp
   @ cl,125 SAY "³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   IMPAC("³       PROTOCOLO DE ENTREGA - Carnˆ de Anuidade              ³³       PROTOCOLO DE ENTREGA - Carnˆ de Anuidade              ³",cl,000)
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[1]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[2]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[3]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[4]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY linha[5]
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Ocorrencia de Entrega                                        ³³Ocorrencia de Entrega                                        ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Entregador                                                   ³³Entregador                                                   ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   IMPAC("³Entregue …                         Parentesco:               ³³Entregue …                         Parentesco:               ³",cl,000)
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³                                                             ³³                                                             ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "³Ass.:                              Data.:     /     /        ³³Ass.:                              Data.:     /     /        ³"
   REL_CAB(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY "ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ"
   AFILL(linha,[])
  ENDI
 ENDD ccop
 EJEC                                              // salta pagina
END SEQUENCE
IMPCTL(drvtcom)                                    // retira comprimido
SET MARG TO                                        // coloca margem esquerda = 0
IMPCTL(lpp_066)                                    // seta pagina com 66 linhas
SET PRINTER TO (drvporta)                          // fecha arquivo gerado (se houver)
SET DEVI TO SCRE                                   // direciona saida p/ video
IF tps=2                                           // se vai para arquivo/video
 BROWSE_REL(arq_,2,3,MAXROW()-2,78)
ENDI                                               // mostra o arquivo gravado
GRELA(39)                                          // grava variacao do relatorio
SELE TXPROC                                        // salta pagina
SET RELA TO                                        // retira os relacionamentos
SET(_SET_DELETED,dele_atu)                         // os excluidos serao vistos
RETU

STATIC PROC REL_CAB(qt)                            // cabecalho do relatorio
IF qt>0                                            // se parametro maior que 0
 cl=cl+qt                                          // soma no contador de linhas
ENDI
IF cl>maxli .OR. qt=0                              // quebra de pagina
 cl=qt-1 ; pg_++
ENDI
RETU

* \\ Final de ADP_RV68.PRG
FUNC LSTPTENTR
  pg_=1; cl=999
  INI_ARQ()                                        // acha 1o. reg valido do arquivo
  ccop++                                           // incrementa contador de copias
  DO WHIL !EOF()
   #ifdef COM_TUTOR
    IF IN_KEY()=K_ESC                              // se quer cancelar
   #else
    IF INKEY()=K_ESC                               // se quer cancelar
   #endi
    IF canc()                                      // pede confirmacao
     BREAK                                         // confirmou...
    ENDI
   ENDI
   REL_CABLST(1)                                      // soma cl/imprime cabecalho
   @ cl,000 SAY GRUPOS->grupo+[ ]+codigo   +[ ]+;     // Codigo
                TRAN(GRUPOS->nome,"@!")    +[ ]+;     // Nome
                TRAN(GRUPOS->endereco,"@!")+[ ]+;     // Endere‡o
                TRAN(cobrador,"!!!")       +[ ]+;     // Cobrador
                TRAN(valorpg,"@E 999")  +[ ]+;     // Qt.Circ
                TRAN(valor,"@E 999.99")    +[ ]+;     // Valor
                TRAN(emissao_,"@D")                // Emissao
   SKIP                                            // pega proximo registro
  ENDD
RETU

STATIC PROC REL_CABLST(qt)                            // cabecalho do relatorio
IF qt>0                                            // se parametro maior que 0
 cl=cl+qt                                          // soma no contador de linhas
ENDI
IF cl>maxli .OR. qt=0                              // quebra de pagina
 IMPAC(nemp,0,000)                                 // nome da empresa
 @ 0,070 SAY "PAG"
 @ 0,074 SAY TRAN(pg_,'9999')                      // n£mero da p gina
 IMPAC(nsis,1,000)                                 // t¡tulo aplica‡„o
 @ 1,070 SAY "ADP_RV68"                            // c¢digo relat¢rio
 @ 2,000 SAY "Protocolos listados"
 @ 2,062 SAY NSEM(DATE())                          // dia da semana
 @ 2,070 SAY DTOC(DATE())                          // data do sistema
 @ 3,000 SAY titrel                                // t¡tulo a definir
 @ 4,000 SAY REPL("-",78)
 cl=qt+4 ; pg_++
ENDI
RETU
